Testing correctness of PointSET

Test 4: insert n random points and check nearest() for n random query points * 1000 random points in a 65536-by-65536 grid * 1000 random points in a 8192-by-8192 grid * 1000 random points in a 1024-by-1024 grid - failed on trial 327 of 1000 - student nearest() = (0.8701171875, 0.96484375) - reference nearest() = (0.8662109375, 0.9580078125) - student distanceSquaredTo() = 0.000061988830566 - reference distanceSquaredTo() = 0 * 1000 random points in a 128-by-128 grid - failed on trial 4 of 1000 - student nearest() = (0.1953125, 0.9765625) - reference nearest() = (0.203125, 0.9609375) - student distanceSquaredTo() = 0.00030517578125 - reference distanceSquaredTo() = 0 * 1000 random points in a 16-by-16 grid - failed on trial 1 of 1000 - student nearest() = (0.0625, 0.6875) - reference nearest() = (0.0, 0.6875) - student distanceSquaredTo() = 0.00390625 - reference distanceSquaredTo() = 0 ==> FAILED

Test 6: check intermixed sequence of calls to isEmpty(), size(), insert(), contains(), range(), and nearest() with probabilities p1, p2, p3, p4, p5, and p6, respectively * 10000 calls with random points in a 8192-by-8192 grid and probabilities 0.05, 0.05, 0.3, 0.2, 0.2, 0.2 * 10000 calls with random points in a 1024-by-1024 grid and probabilities 0.05, 0.05, 0.3, 0.2, 0.2, 0.2 - failed on trial 1144 of 10000 - student nearest() = (0.7060546875, 0.533203125) - reference nearest() = (0.671875, 0.4677734375) - student distanceSquaredTo() = 0.005449295043945 - reference distanceSquaredTo() = 0 * 10000 calls with random points in a 128-by-128 grid and probabilities 0.05, 0.05, 0.3, 0.2, 0.2, 0.2 - failed on trial 775 of 10000 - student nearest() = (0.953125, 0.1484375) - reference nearest() = (0.953125, 0.1171875) - student distanceSquaredTo() = 0.0009765625 - reference distanceSquaredTo() = 0 * 10000 calls with random points in a 16-by-16 grid and probabilities 0.05, 0.05, 0.3, 0.2, 0.2, 0.2 - failed on trial 87 of 10000 - student nearest() = (0.875, 0.0) - reference nearest() = (0.6875, 0.0) - student distanceSquaredTo() = 0.03515625 - reference distanceSquaredTo() = 0 * 10000 calls with random points in a 1-by-1 grid and probabilities 0.05, 0.05, 0.3, 0.2, 0.2, 0.2 - failed on trial 14 of 10000 - student nearest() = (1.0, 0.0) - reference nearest() = (0.0, 0.0) - student distanceSquaredTo() = 1 - reference distanceSquaredTo() = 0 ==> FAILED 


Testing correctness of KdTree

Test 1d: insert general points; check size() and isEmpty() after each insertion * 5 random general points in a 1-by-1 grid - failed after inserting point 4 of 5 - student size() = 4 - reference size() = 3 - student isEmpty() = false - reference isEmpty() = false - sequence of points inserted: A 0.0 1.0 B 1.0 1.0 C 1.0 0.0 D 0.0 1.0 * 10 random general points in a 4-by-4 grid - failed after inserting point 3 of 10 - student size() = 3 - reference size() = 2 - student isEmpty() = false - reference isEmpty() = false - sequence of points inserted: A 0.75 0.75 B 0.25 0.25 C 0.75 0.75 * 50 random general points in a 8-by-8 grid - failed after inserting point 17 of 50 - student size() = 17 - reference size() = 16 - student isEmpty() = false - reference isEmpty() = false - sequence of points inserted: A 0.0 0.625 B 1.0 0.375 C 0.125 0.875 D 0.5 0.5 E 0.625 0.25 F 0.125 0.0 G 0.125 0.5 H 0.25 0.25 I 0.375 0.5 J 0.375 0.375 K 0.75 0.375 L 0.125 0.75 M 0.875 1.0 N 0.25 0.375 O 0.125 0.375 P 0.0 0.875 Q 0.25 0.375 * 100000 random general points in a 16-by-16 grid - failed after inserting point 16 of 100000 - student size() = 16 - reference size() = 15 - student isEmpty() = false - reference isEmpty() = false - sequence of points inserted: A 0.1875 0.0 B 0.6875 0.0 C 0.4375 0.5625 D 0.4375 0.625 E 0.3125 0.1875 F 0.625 0.875 G 0.625 0.625 H 0.6875 0.75 I 0.4375 0.875 J 0.125 0.3125 K 0.5 0.1875 L 0.125 0.1875 M 0.8125 0.0 N 0.8125 0.5 O 0.75 0.0625 P 0.625 0.875 * 100000 random general points in a 128-by-128 grid - failed after inserting point 124 of 100000 - student size() = 124 - reference size() = 123 - student isEmpty() = false - reference isEmpty() = false * 100000 random general points in a 1024-by-1024 grid - failed after inserting point 661 of 100000 - student size() = 661 - reference size() = 660 - student isEmpty() = false - reference isEmpty() = false ==> FAILED

Test 6a: insert points from file; check nearest() with random query points and check traversal of kd-tree * input5.txt - failed on trial 13 of 1000 - performs incorrect traversal of kd-tree during call to nearest() - sequence of points inserted: A 0.7 0.2 B 0.5 0.4 C 0.2 0.3 D 0.4 0.7 E 0.9 0.6 - query point = (0.7, 1.0) - student nearest() = (0.4, 0.7) - reference nearest() = (0.4, 0.7) - student distanceSquaredTo() = 0.18 - reference distanceSquaredTo() = 0.18 - student sequence of kd-tree nodes involved in calls to distanceSquaredTo(): A B D E - reference sequence of kd-tree nodes involved in calls to distanceSquaredTo(): A E B D * input10.txt ==> FAILED

Test 8c: check intermixed sequence of calls to insert(), isEmpty(), size(), contains(), range(), and nearest() with probabilities (p1, p2, p3, p4, p5, p6), respectively * 20000 calls with general points in a 1-by-1 grid and probabilities (0.3, 0.05, 0.05, 0.2, 0.2, 0.2) - failed on trial 25 of 20000 - student size() = 8 - reference size() = 4 - sequence of operations was: st.insert(1.0, 1.0) st.insert(0.0, 1.0) st.insert(1.0, 1.0) st.nearest((1.0, 0.0)) ==> (1.0, 1.0) st.range([0.0, 1.0] x [1.0, 1.0]) ==> D F st.contains((0.0, 1.0)) ==> true st.contains((1.0, 0.0)) ==> false st.nearest((1.0, 0.0)) ==> (1.0, 1.0) st.insert(0.0, 1.0) st.nearest((1.0, 1.0)) ==> (1.0, 1.0) st.range([0.0, 1.0] x [0.0, 0.0]) ==> empty st.range([1.0, 1.0] x [0.0, 1.0]) ==> D st.nearest((1.0, 1.0)) ==> (1.0, 1.0) st.contains((0.0, 0.0)) ==> false st.range([1.0, 1.0] x [1.0, 1.0]) ==> D st.range([0.0, 1.0] x [0.0, 1.0]) ==> D U st.insert(1.0, 1.0) st.range([1.0, 1.0] x [1.0, 1.0]) ==> C st.nearest((1.0, 0.0)) ==> (1.0, 1.0) st.range([0.0, 0.0] x [0.0, 0.0]) ==> empty st.insert(1.0, 0.0) st.insert(0.0, 0.0) st.insert(1.0, 1.0) st.contains((1.0, 1.0)) ==> true st.size() ==> 8 * 20000 calls with general points in a 10-by-10 grid and probabilities (0.3, 0.05, 0.05, 0.2, 0.2, 0.2) - failed on trial 71 of 20000 - student size() = 19 - reference size() = 18 * 20000 calls with general points in a 100-by-100 grid and probabilities (0.3, 0.05, 0.05, 0.2, 0.2, 0.2) - failed on trial 398 of 20000 - student size() = 120 - reference size() = 119 * 20000 calls with general points in a 1000-by-1000 grid and probabilities (0.3, 0.05, 0.05, 0.2, 0.2, 0.2) - failed on trial 6661 of 20000 - student size() = 1979 - reference size() = 1978 * 20000 calls with general points in a 8192-by-8192 grid and probabilities (0.3, 0.05, 0.05, 0.2, 0.2, 0.2) * 20000 calls with general points in a 65536-by-65536 grid and probabilities (0.3, 0.05, 0.05, 0.2, 0.2, 0.2) ==> FAILED


Test 11: check that the specified exception is thrown with null arguments * argument to insert() is null * argument to contains() is null * argument to range() is null - throws wrong exception when calling range() with a null argument - throws a java.lang.NullPointerException - should throw a java.lang.IllegalArgumentException * argument to nearest() is null ==> FAILED